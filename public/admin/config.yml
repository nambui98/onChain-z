# when using the default proxy server port
local_backend: true

backend:
  # github, gitlab
  name: git-gateway
  # name: test-repo
  branch: master # Branch to update (optional; defaults to master)
  site_domain: cms.netlify.com # (location.hostname or cms.netlify.com when on localhost)
  cms_label_prefix: netlify-cms/

# users upload images directly within the editor, those files are saved here
media_folder: public/assets/upload # Media files will be stored in the repo
public_folder: /assets/upload # The src attribute for uploaded media will begin with

# work normally and free with small quota. Good UI, but costly. When user choose image from Google Photo or Facebook to upload to its service
# media_library:
#   name: uploadcare
#   config:
#     publicKey: demopublickey

# By default, saving a post in the CMS interface pushes a commit directly to the publication branch specified in backend.
# Editorial Workflow adds an interface for drafting, reviewing, and approving posts.
publish_mode: editorial_workflow

# TODO: i18n https://www.netlifycms.org/docs/beta-features/#i18n-support

# Whitelabel Editor UI.
display_url: https://onchainz.netlify.app # Defaults to site_url.
logo_url: https://onchainz.netlify.app/assets/images/logo.svg

# provide a URL to published site. May be used by the CMS for various functionality.
# Used together with a collection's preview_path to create links to live content.
site_url: https://onchainz.netlify.app
# https://www.netlifycms.org/docs/configuration-options/#slug-type
slug:
  clean_accents: true

# Collections define the structure for the different content types on your static site.
collections:
  - name: 'articles' # Used in routes, must be unique. e.g., /admin/collections/blog
    label: 'Articles' # Used in the Editor/Admin UI
    label_singular: 'Article' # Used in the UI, ie: "New Post"
    folder: 'src/pages/articles' # The path to the folder where the documents are stored, relate to repo root

    # still BETA so no use at the moment https://www.netlifycms.org/docs/beta-features/#nested-collections
    #     nested:
    #       depth: 10 # max depth to show in the collection tree
    #       summary: '{{dirname}}' # for list view of this collection
    #     meta: { path: { label: 'Path', widget: 'string', index_file: slug } }

    create: true # Allow users to create new documents in this collection
    description: >
      Editor should take focus in creating tags for article because it's a very important key factor for SEO.
      The title also need to contains 3 tags. Tags (or important keywords) should appear at least one in the article body.
    slug: '{{year}}-{{month}}-{{day}}-{{slug}}' # Filename template, e.g., YYYY-MM-DD-title.md, Can use {{fields.author}}
    preview_path: '{{dirname}}/{{year}}/{{month}}/{{slug}}' # https://www.netlifycms.org/docs/configuration-options/#preview_path
    preview_path_date_field: 'publishDate'
    summary: "{{title | upper}} ~ {{publishDate | date('YYYY-MM-DD')}}" # for list view of this collection

    # The fields for each document, usually in front matter
    # UI label, field name (key), widget (UI type or value type https://www.netlifycms.org/docs/widgets/)
    fields:
      - { label: 'Layout', name: 'layout', widget: 'hidden', default: '~/layouts/ArticleLayout.astro' }
      - {
          label: 'Title',
          name: 'title',
          widget: 'string',
          tagname: 'h1',
          pattern: ['.{35,}', 'Must have at least 6 words or 35 characters'],
          hint: 'Title should contains **2 keywords** of your article. This is very important for SEO.',
        } # basically this is for slug creation
      - { label: 'Summary', name: 'summary', widget: 'string', hint: '2 to 4 sentences that summarized the whole article.', required: false }
      - { label: 'Body', name: 'body', widget: 'markdown' }
      - { label: 'Tags', name: 'tags', widget: list, hint: 'Seperated by comma. Every article should have at least **3 keywords**. Very important for SEO.' }
      - { label: 'Draft', name: 'draft', widget: 'boolean', required: false, default: false }
      - { label: 'Thumbnail Image', name: 'thumbnail', widget: 'image', required: false, tagname: '' }
      - { label: 'Main Image', name: 'image', widget: 'image', required: false, allow_multiple: false }
      - { label: 'Author', name: 'author', widget: list }
      - label: 'Relation'
        required: false
        name: 'relation'
        hint: link to other article
        widget: 'relationArticle'
        collection: 'articles'
        display_fields: ['title', 'publishDate', 'uuid']
        search_fields: ['title', 'summary', 'body', 'tags']
        value_field: 'uuid'
      - { label: 'Publish Date', name: 'publishDate', widget: 'datetime', date_format: 'YYYY-MM-DD', time_format: 'HH:mm', format: 'YYYY-MM-DD HH:mm' }
      - { label: 'Update Date', name: 'updateDate', widget: 'datetime', date_format: 'YYYY-MM-DD', time_format: 'HH:mm', format: 'YYYY-MM-DD HH:mm' }
      - { label: 'Rating (scale of 1-5)', name: 'rating', widget: 'number', required: false }
      - { label: 'Publish to Medium', name: 'medium', widget: 'boolean', required: false, default: true }
      - { label: 'Publish to Dev.to', name: 'devto', widget: 'boolean', required: false, default: true }
      - { label: 'UUID', name: 'uuid', widget: uuid }

    # https://www.netlifycms.org/docs/configuration-options/#sortable_fields
    sortable_fields: ['title', 'tags', 'updateDate', 'rating']
    # The entries for any collection can be filtered based on the value of a single field. The example collection below only shows post entries with the value en in the language field.
    # filter:
    # field: language
    # value: en
    view_filters:
      - label: High Rating
        field: rating
        pattern: 4|5
      - label: Low Rating
        field: rating
        pattern: 1|2|3
      - label: Drafts
        field: draft
        pattern: true
    view_groups:
      - label: Year
        field: updateDate
        pattern: \d{4}
      - label: Month
        field: updateDate
        pattern: \d{4}-\d{2}
      - label: Drafts
        field: draft

  - name: 'authors'
    label: 'Authors'
    folder: 'src/pages/authors'
    create: true
    description: >
      Author/Editor of article.
    slug: '{{slug}}'
    preview_path: '{{dirname}}/{{slug}}'
    summary: "{{title | upper}} ~ {{body | truncate(50, '...') }}"
    fields:
      - { label: 'Layout', name: 'layout', widget: 'hidden', default: '~/layouts/AuthorLayout.astro' }
      - { label: 'Title', name: 'title', widget: 'string', tagname: 'h1' } # basically is slug creation
      - { label: 'Summary', name: 'summary', widget: 'string', required: false }
      - { label: 'Main Image', name: 'image', widget: 'image', allow_multiple: false, required: false }
      - { label: 'Tags', name: 'tags', widget: list }
      - { label: 'Body', name: 'body', widget: 'markdown' }

  - name: 'faq'
    label: 'FAQ'
    description: >
      Frequently Asked Questions, provide some common answers to our site visitors
    folder: 'src/pages/faqs'
    create: true # Allow users to create new documents in this collection
    summary: "{{title | upper}} ~ {{body | truncate(50, '...') }}"
    fields: # The fields each document in this collection have
      - { label: 'Question', name: 'title', widget: 'string', tagname: 'h1' }
      - { label: 'Answer', name: 'body', widget: 'markdown' }

  - name: 'settings'
    label: 'SYSTEM Settings'
    description: 'Change settings here to change some behaviour of this site'
    delete: false # Prevent users from deleting documents in this collection
    editor:
      preview: false
    files:
      - name: 'general'
        label: 'Site Settings'
        file: 'src/data/settings.json'
        fields:
          - { label: 'Summary', name: 'siteSummary', widget: 'string' }
          - { label: 'Global title', name: 'siteTitle', widget: 'string' }
          - { label: 'Slogan', name: 'siteSlogan', widget: 'string' }
          - { label: 'Default Thumbnail', name: thumb, widget: image, class: 'thumb', required: false }
          - { label: 'Home page settings', name: 'homePageSettings', widget: 'object', fields: [{ label: 'Number of posts on frontpage', name: frontPagePostLimit, widget: number, min: 1, max: 10 }] }
