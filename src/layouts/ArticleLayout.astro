---
import BaseSEOLayout from '~/layouts/BaseSEOLayout.astro'
import AppConfig from '~/AppConfig'
import MainNew from '~/containers/HomePage/MainNew'
import HotNew from '~/containers/FeaturedNews/HotNew'
import Tivi from '~/containers/HomePage/Tivi'
import BackGround from '~/components/BackGround'
import { AdsFullWidth } from '~/components/Ads'

import PostService from '~/services/PostService'
import Detail from '~/containers/ArticleDetails/Detail'
import Breadcrumbs from '~/components/Breadcrumbs'
import RelatedPosts from '~/containers/ArticleDetails/RelatedPosts'
import LeftDetail from '~/containers/ArticleDetails/LeftDetail'
import RightDetail from '~/containers/ArticleDetails/RightDetail'
import { Account } from '~/components/Account'
// import Button from '../components/Button'
import ArticleHero from '../components/Article/ArticleHero'
import ArticleMetadata from '../components/Article/ArticleMetadata'
import { ButtonPrimary } from '~/components/Button'


const articles = await Astro.glob('./**/*.md') // Data Fetching: List all Markdown posts in the repo.
const postService = new PostService(articles)
const mainArticles = postService.getAll().slice(0, AppConfig.homePageSettings.frontPagePostLimit || 6)
const highlightArticles = postService.getHomeHighlightItems().slice(0, AppConfig.homePageSettings.frontPagePostLimit || 6)
const tiviArticles = postService.getHomeTVWidgetItems().slice(0, AppConfig.homePageSettings.frontPagePostLimit || 6)


const { content } = Astro.props

const title = content?.title || AppConfig.siteTitle || 'Article layout'
const description = AppConfig.siteSlogan

const links = [
  {
    name: 'Trang chủ',
    href: '/',
  },
  {
    name: 'Tin tức nổi bật',
    href: '/blog',
  },
]
---


<BaseSEOLayout lang={content.lang} title={title} description={content.description} className={'ArticleLayout'}>

  <main class="Detail wrapper mt4 mb4 z-2 relative sm-max:static lg:m-0 sm:mx-3">
    <Breadcrumbs links={links}/>
    <!-- <Detail article={highlightArticles[0]} articles={highlightArticles}/> -->
    <div class="ArticleDetails sm-max:px-4">
        <div class="flex  border-b-1 border-gray40 pb-6 gap-8">
        <div class="w-5/7 sm-max:w-full">
              {/* // TODO: Thach: em cần data tác giả của bài viết chuyền vào Account*/ }
            <Account client:load article={highlightArticles[0]} articles={articles} />
            <LeftDetail article={highlightArticles[0]} />
    </div>
            <RightDetail article={highlightArticles[0]} articles={highlightArticles} className="w-2/7 sm-max:hidden" />
        </div>
        <RelatedPosts className="mt-10" articles={highlightArticles.slice(0, 3)} />
    </div>
</main>




  <!-- <h1 class="heading1">{title}</h1>
  <ArticleHero content={content} />
  <ArticleMetadata content={content} />

  <div class="wrapper wrapper__readable">
    <div class="content">
      <slot />
    </div>
  </div>

  <footer class="text-center mt-6">
           <ButtonPrimary onClick={() => { }}>
                        View Relatedsssssss
                    </ButtonPrimary>
  </footer> -->
</BaseSEOLayout>

<style scoped lang="scss">
  .content {
    font-size: var(--f-u1);
    line-height: 2;
  }
</style> 


